#!/bin/bash

set -euo pipefail

function get_image_id {
    if [ ! -z "$CDFLOW_DEBUG" ]
    then
        echo "cdflow-commands.local"
    else
        echo "mergermarket/cdflow-commands:latest"
    fi
}

function get_environment_flags {
    local environment_flags=""
    if [ ! -z "${AWS_ACCESS_KEY_ID}" ]; then
        environment_flags="${environment_flags} -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
    fi
    if [ ! -z "${AWS_SECRET_ACCESS_KEY}" ]; then
        environment_flags="${environment_flags} -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
    fi
    if [ ! -z "${AWS_SESSION_TOKEN}" ]; then
        environment_flags="${environment_flags} -e AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}"
    fi
    if [ ! -z "${FASTLY_API_KEY}" ]; then
        environment_flags="${environment_flags} -e FASTLY_API_KEY=${FASTLY_API_KEY}"
    fi
    if [ ! -z "${JOB_NAME}" ]; then
        environment_flags="${environment_flags} -e JOB_NAME=${JOB_NAME}"
    fi
    if [ ! -z "${EMAIL}" ]; then
        environment_flags="${environment_flags} -e EMAIL=${EMAIL}"
    elif [ "$(git config user.email)" != "" ]; then
        environment_flags="${environment_flags} -e EMAIL=$(git config user.email)"
    fi
    echo "${environment_flags}"
}

function get_project_root {
    if [ ! -z "${CDFLOW_PROJECT_ROOT}" ]
    then
        echo "${CDFLOW_PROJECT_ROOT}"
    else
        echo "$(git rev-parse --show-toplevel)"
    fi
}

function docker_run {
    local project_root="${1}"
    local environment_flags="${2}"
    local image_id="${3}"
    docker run --rm \
        -w "${project_root}" \
        -v "${project_root}:${project_root}" \
        -v /var/run/docker.sock:/var/run/docker.sock \
        "$(tty -s && echo -it || echo -i)" \
        "${environment_flags}" "${image_id}"
}
